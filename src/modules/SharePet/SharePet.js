import React, { useState, useId, useEffect, useContext } from "react";
import "./SharePet.css";
import {useNavigate} from 'react-router-dom';

import NavBar from "./../../components/NavBar/NavBar";
import { dbContext } from "./../../database/databaseContext";

function SharePet() {
  const codeInputId = useId();
  const typeInputId = useId();
  const petInputId = useId();

  const navigate = useNavigate();

  const db = useContext(dbContext);

  const [isReceiver, setIsReceiver] = useState(true);
  const [data, setData] = useState({});
  const [error, setError] = useState("");
  const [code, setCode] = useState("");
  const [type, setType] = useState("");
  const [pet, setPet] = useState("");
  const [codeValid, setCodeValid] = useState(false);

  useEffect(() => {
    setData(
      db.getSharePetData(db.getAccountId(window.localStorage.getItem("email")))
    );
  }, []);

  const copyTextToClipboard = (str) => {
    window.navigator.clipboard.writeText(str);
    alert("Code:".concat(str, " Copied to clipboard"));
  };

  const validate = (code) => {
    if (codeValid) {
      setCodeValid(false);
    } else {
      if (code === "") {
        setError("code cant be empty");
        setCodeValid(false);
      } else if (code.length !== 6) {
        setError("Code Invalid");
        setCodeValid(false);
      } else {
        setError("");
        setCodeValid(true);
      }
    }
  };

  const share = () =>{
    if(type === ''){
      setError('type cant be empty');
    }else if(pet === ''){
      setError('pet cant be empty');
    }else{
      alert(`Do you want to share your pet details with user`);
      navigate('/owner')
    }
  }

  return (
    <>
      <NavBar type="owner" />
      <div className="owner_sharepet color1">
        <div className="main_box color2">
          <div className="container1">
            <div className="link_container">
              <div>
                <button
                  onClick={() => {
                    setIsReceiver(true);
                  }}
                >
                  Receiver
                </button>
              </div>
              <div>
                <button
                  onClick={() => {
                    setIsReceiver(false);
                  }}
                >
                  Sender
                </button>
              </div>
            </div>
            <div className="container2">
              {isReceiver ? (
                <>
                  <h3>Receiver</h3>
                  <button
                    onClick={() => {
                      setIsReceiver(true);
                    }}
                  >
                    Generate a Transfer
                  </button>
                </>
              ) : (
                <>
                  <h3>Sender</h3>
                  <div className="input">
                    <label HTMLfor={codeInputId}>
                      Code generated by the Receiver:
                    </label>
                    <input
                      id={codeInputId}
                      value={code}
                      disabled={codeValid}
                      onChange={(e) => {
                        setCode(e.target.value);
                      }}
                    />
                  </div>
                  {error !== "" ? <p className="error">{error}</p> : null}
                  <button
                    onClick={() => {
                      validate(code);
                    }}
                  >
                    {codeValid ? "Change code" : "Validate"}
                  </button>
                  {codeValid ? (
                    <>
                      <div>
                        <div className="input_root">
                          <label htmlFor={typeInputId}>Type of sharing:</label>
                          <select
                            id={typeInputId}
                            defaultValue={type}
                            onChange={(e) => {
                              setType(e.target.value);
                            }}
                            name="SelectedType"
                          >
                          <option value="">Select option</option>
                          <option value="perm">Permanent</option>
                            <option value="temp">Temporary</option>
                          </select>
                        </div>
                        <div className="input_root">
                          <label htmlFor={petInputId}>Pet:</label>
                          <select
                            id={petInputId}
                            defaultValue={pet}
                            onChange={(e) => {
                              setPet(e.target.value);
                            }}
                            name="SelectedPet"
                          >
                          <option value="">Select option</option>
                          {data.pets.map(pet=><option key={pet.id} value={pet.id}>{pet.name}</option>)}
                          </select>
                        </div>
                        <button
                    onClick={() => {
                      share(code);
                    }}
                  >
                    Share
                  </button>
                      </div>
                    </>
                  ) : null}
                </>
              )}
            </div>
            <div className="transfers">
              <h3>Transfers</h3>
              {((!data.hasOwnProperty('transfers'))||(data.transfers.length === 0)) ? (
                <p>No active transfers</p>
              ) : (
                <>
                  {data.transfers.map((t) => (
                    <div key={t.id} className="transfer">
                      <p>
                        Code:
                        <strong>{t.code}</strong>
                      </p>
                      <p>Created on:</p>
                      <button
                        onClick={() => {
                          copyTextToClipboard(t.code);
                        }}
                      >
                        Copy the code
                      </button>
                    </div>
                  ))}
                </>
              )}
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

export default SharePet;
